CREATE DATABASE {{ db_name }};
\connect {{ db_name }}
CREATE USER {{ db_generated_user }};
ALTER USER {{ db_generated_user }} WITH PASSWORD '{{ db_generated_password }}' CREATEROLE;
ALTER ROLE {{ db_generated_user }} WITH SUPERUSER;
SELECT 'Altering user with password  <generated-password>' AS "INFO";
ALTER USER {{ db_generated_user }} WITH PASSWORD '{{ db_generated_password }}';
SELECT '[FINISH] Altering user with password <generated-password>' AS "INFO";
GRANT ALL ON DATABASE {{ db_name }} TO {{ db_generated_user }};
GRANT ALL PRIVILEGES ON DATABASE {{ db_name }} TO {{ db_generated_user }};
ALTER DATABASE {{ db_name }} OWNER TO {{ db_generated_user }};

-- Provision Migration User
CREATE USER {{ db_generated_migration_user }};
CREATE ROLE {{ db_generated_migration_user }};
GRANT ALL ON DATABASE {{ db_name }} TO {{ db_generated_migration_user }};
GRANT ALL PRIVILEGES ON DATABASE {{ db_name }} TO {{ db_generated_migration_user }};

-- Install Extension
CREATE EXTENSION IF NOT EXISTS postgis;
CREATE EXTENSION IF NOT EXISTS  fuzzystrmatch;
CREATE EXTENSION IF NOT EXISTS  postgis_tiger_geocoder;
CREATE EXTENSION IF NOT EXISTS  postgis_topology;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
ALTER SCHEMA tiger OWNER TO pg_rds_superuser;
ALTER SCHEMA topology OWNER TO pg_rds_superuser;

-- CREATE FUNCTION exec(text) returns text language plpgsql volatile AS $f$ BEGIN EXECUTE $1; RETURN $1; END; $f$;
--SELECT exec('ALTER TABLE ' || quote_ident(s.nspname) || '.' || quote_ident(s.relname) || ' OWNER TO rds_superusers;')
--  FROM (
--    SELECT nspname, relname
--    FROM pg_class c JOIN pg_namespace n ON (c.relnamespace = n.oid)
--    WHERE nspname in ('tiger','topology') AND
--    relkind IN ('r','S','v') ORDER BY relkind = 'S')
--s;
