#!/bin/bash
JQ=./.bin.db/jq
export DB_ENDPOINT=$(cat rds_db.json | $JQ .rds_db_endpoint.value)
IFS=':' read -ra DB_ENDPOINT_COMPONENT <<< "$DB_ENDPOINT"
DB_HOST="${DB_ENDPOINT_COMPONENT[0]/\"/}"
DB_PORT="${DB_ENDPOINT_COMPONENT[1]/\"/}"
CONNECTION_STRING="{{ db.rds.db_provider_engine }}://{{ db_generated_user }}:{{ db_generated_password }}@${DB_HOST}:${DB_PORT}/{{ db_name }}"

VAULT_EXEC=./.bin.db/vault

export VAULT_ADDR="{{ secrets.vault.host }}"
{% if secrets.vault.tls.enabled %}
export VAULT_CACERT={{ dbctl_vault_ca_cert_file }}
export VAULT_CLIENT_CERT={{ dbctl_vault_cert_file }}
export VAULT_CLIENT_KEY={{ dbctl_vault_key_file }}
export VAULT_TOKEN={{ dbctl_vault_token }}
{% endif %}

echo "[DBCTL] Enabling secrets"
$VAULT_EXEC secrets enable -path={{ db_identifier_path }} database

echo "[DBCTL] Configuring secrets - path: {{ db_identifier_path }}/config/root"

$VAULT_EXEC write {{ db_identifier_path }}/config/root \
  plugin_name=postgresql-database-plugin \
  allowed_roles="*" \
  connection_url="${CONNECTION_STRING}" \
  verify_connection=false

if [ $? -eq 0 ]; then
    echo "SUCCESS" > VAULTUPLOADOUTPUT
else
    echo "FAILED" > VAULTUPLOADOUTPUT
fi