- name: Checking variables - DB Provider
  debug:
    var: db_provider

- name: Checking variables - DB Name
  debug:
    var: db_name

- name: Checking variables - DB Environment
  debug:
    var: db_environment

- name: Checking variables - DB Directory
  debug:
    var: db_directory

- name: "Generate Random DB Password with length: {{ db.hosted.db_provider_root_credential.password_length }}"
  shell: "pwgen -s {{ db.hosted.db_provider_root_credential.password_length }} 1"
  register: db_generated_password_output

- name: Register
  set_fact:
    db_generated_password: "{{ db_generated_password_output.stdout_lines[0] }}"
    db_generated_user: "{{ db_name }}_{{ db.hosted.db_provider_root_credential.username }}"
    db_generated_migration_user: "{{ db_name }}_migrations"

- name: Preparing db directory
  file:
    path: "{{ db_directory }}/sql"
    state: directory

- name: Preparing db __roles__/migrations directory
  file:
    path: "{{ db_directory }}/sql/__roles__/migrations/"
    state: directory

- name: Constructing create-db.sql
  template:
    src: "hosted/sql/create-db.sql.j2"
    dest: "{{ db_directory }}/sql/create-db.sql"

- name: Constructing __roles__/migrations/creation.sql
  template:
    src: "hosted/sql/__roles__/migrations/creation.sql.j2"
    dest: "{{ db_directory }}/sql/__roles__/migrations/creation.sql"

- name: Constructing Secrets Management Flow - vault
  template:
    src: hosted/secrets/creds-upload-vault.j2
    dest: "{{ db_directory }}/.creds-upload-vault"
    mode: 0755

- name: Transfer database creation file to remote server
  command: "rsync -r {{ db_directory }} {{ remote_user }}@{{ remote_host }}:~/.pios.run.db"

- name: Execute create-db script
  shell: "mysql < ~/.pios.run.db/{{ run_db_identifier }}/sql/create-db.sql"
  become: yes
  become_method: sudo
  become_user: root
  remote_user: "{{ remote_user }}"
  delegate_to:
    "{{ remote_host }}"