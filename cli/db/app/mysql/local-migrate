#!/bin/bash
set -e
trap "exit" INT

source ./db/app/meta
source ./db/app/namespace

CURRENT_DIRECTORY=$(pwd)

function db-migrate-validate {
  local DB_NAME=$1
  local ENVIRONMENT=$2
  local DB_SCHEMA=$3
  local DB_MIGRATION_USERNAME=$4
  local DB_MIGRATION_PASSWORD=$5
  local DB_HOST=$6
  local APP_NAME=$7

  local BLUEPRINT_DIRECTORY=$(pwd)/db/blueprint
  local BLUEPRINT_MIGRATIONS_DIRECTORY=${BLUEPRINT_DIRECTORY}/mysql/${APP_NAME}/__migrations__/$DB_SCHEMA

  if [[ ! -d "${BLUEPRINT_MIGRATIONS_DIRECTORY}" ]]; then
    echo -e "${RED}ERROR:${NC} No MIGRATIONS specification directory found for ${YELLOW}${APP_NAME}/${DB_SCHEMA}${NC}. [${YELLOW}${BLUEPRINT_MIGRATIONS_DIRECTORY}${NC}]"
    exit 1
  fi
}

function db-migrate-execute {
  local DB_NAME=$1
  local ENVIRONMENT=$2
  local DB_SCHEMA=$3
  local DB_MIGRATION_USERNAME=$4
  local DB_MIGRATION_PASSWORD=$5
  local DB_HOST=$6
  local APP_NAME=$7

  local BLUEPRINT_DIRECTORY=$(pwd)/db/blueprint
  local BLUEPRINT_MIGRATIONS_DIRECTORY=${BLUEPRINT_DIRECTORY}/mysql/${APP_NAME}/__migrations__/$DB_SCHEMA

  export IDENTIFIER=hosted.mysql.manual-migration.${APP_NAME}.${ENVIRONMENT}
  export DB_DIRECTORY=$CURRENT_DIRECTORY/.run.db/${IDENTIFIER}
  mkdir -p ${DB_DIRECTORY}
  export DB_MIGRATIONS_DIRECTORY=$DB_DIRECTORY/migrations
  mkdir -p $DB_MIGRATIONS_DIRECTORY/$DB_SCHEMA
  cp -r $BLUEPRINT_MIGRATIONS_DIRECTORY/* $DB_MIGRATIONS_DIRECTORY/$DB_SCHEMA/

  ansible-playbook db/playbooks/dbctl-db-migrate.yml \
    -e "db_engine=mysql" \
    -e "db_deployment_type=$DB_DEPLOYMENT_TYPE" \
    -e "db_name=${DB_NAME}" \
    -e "db_environment=${ENVIRONMENT}" \
    -e "db_directory=${DB_DIRECTORY}" \
    -e "db_host=${DB_HOST}" \
    -e "db_schema=${DB_SCHEMA}" \
    -e "db_migrations_directory=${DB_MIGRATIONS_DIRECTORY}" \
    -e "db_migration_username=${DB_MIGRATION_USERNAME}" \
    -e "db_migration_password=${DB_MIGRATION_PASSWORD}" > /dev/null

  pushd $DB_MIGRATIONS_DIRECTORY
  echo '' > settings.gradle
  gradle -i flywayBaseline
  gradle -i flywayMigrate
  popd
}

echo -e "${RED}JUST FOR DEVELOPMENT ENVIRONMENT (DWYOR)${NC}"
read -p "Enter app name (credit/midas/merchant): " APP_NAME
read -e -p "Enter db host: " -i "localhost" HOST
read -p "Enter db name: "  DBNAME
read -p "Enter db username: "  USERNAME
read -p "Enter db password: "  PASSWORD
read -e -p "Enter db schema: " -i "public" SCHEMA
read -e -p "Enter env (dev/stg): "  -i "dev" NODE_ENV

db-migrate-validate $DBNAME $NODE_ENV $SCHEMA $USERNAME $PASSWORD $HOST $APP_NAME
db-migrate-execute $DBNAME $NODE_ENV $SCHEMA $USERNAME $PASSWORD $HOST $APP_NAME