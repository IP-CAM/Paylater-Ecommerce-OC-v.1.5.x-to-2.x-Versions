#!/bin/bash
set -e 
trap "exit" INT

source ./db/app/meta
source ./db/app/namespace

yq=./.bin.db/yq
CURRENT_DIRECTORY=$(pwd)

function db-mysql-role-use-credential-validate {
  DB_NAME=$1
  ENVIRONMENT=$2
  ROLE_NAME=$3

  local BLUEPRINT_DIRECTORY=$(pwd)/db/blueprint
  local BLUEPRINT_DATABASE_FILE=${BLUEPRINT_DIRECTORY}/mysql/${DB_NAME}/${ENVIRONMENT}.yml
  local BLUEPRINT_ROLES_DIRECTORY=${BLUEPRINT_DIRECTORY}/mysql/${DB_NAME}/__roles__/${ENVIRONMENT}/${ROLE_NAME}
  local BLUEPRINT_ROLES_CREATION_FILE=${BLUEPRINT_DIRECTORY}/mysql/${DB_NAME}/__roles__/${ENVIRONMENT}/${ROLE_NAME}/creation.sql

  local VALIDATE_FILE=$(pwd)/.run.db/use-credential.$DB_NAME.$ENVIRONMENT.$ROLE_NAME.validate
  if [[ ! -f "${BLUEPRINT_DATABASE_FILE}" ]]; then
    echo "echo -e \"${RED}ERROR:${NC} No database specification file found for ${YELLOW}${DB_NAME}/${ENVIRONMENT}.yml${NC}. [${YELLOW}${BLUEPRINT_DATABASE_FILE}${NC}]\"" > $VALIDATE_FILE
    echo "exit 1" >> $VALIDATE_FILE
    echo "source $VALIDATE_FILE"
  fi

  if [[ ! -d "${BLUEPRINT_ROLES_DIRECTORY}" && "$ROLE_NAME" != "migrations" ]]; then
    echo "echo -e \"${RED}ERROR:${NC} No ROLES specification directory found for ${YELLOW}${DB_NAME}/${ENVIRONMENT}/${ROLE_NAME}${NC}. [${YELLOW}${BLUEPRINT_ROLES_DIRECTORY}${NC}]\"" > $VALIDATE_FILE
    echo "exit 1" >> $VALIDATE_FILE
    echo "source $VALIDATE_FILE"
  fi  

  if [[ ! -f "${BLUEPRINT_ROLES_CREATION_FILE}" && "$ROLE_NAME" != "migrations" ]]; then
    echo "echo -e \"${RED}ERROR:${NC} No ROLES creation.sql file found for ${YELLOW}${DB_NAME}/${ENVIRONMENT}/${ROLE_NAME}${NC}. [${YELLOW}${BLUEPRINT_ROLES_CREATION_FILE}${NC}]\"" > $VALIDATE_FILE
    echo "exit 1" >> $VALIDATE_FILE
    echo "source $VALIDATE_FILE"
  fi

  local BLUEPRINT_DIRECTORY=$(pwd)/db/blueprint
  local BLUEPRINT_DATABASE_FILE=${BLUEPRINT_DIRECTORY}/mysql/${DB_NAME}/${ENVIRONMENT}.yml
  DB_DEPLOYMENT_TYPE=$($yq r $BLUEPRINT_DATABASE_FILE 'db.deployment')
  export IDENTIFIER=${DB_DEPLOYMENT_TYPE}.mysql.${ORGANIZATION}.${TEAM}.${PRODUCT}.${DB_NAME}.${ENVIRONMENT}
  export DB_DIRECTORY=$CURRENT_DIRECTORY/.run.db/${IDENTIFIER}
  export DB_CREDENTIALS_DIRECTORY=$DB_DIRECTORY/.credentials
  export DB_CREDENTIALS_FILE=$DB_DIRECTORY/.credentials/$ROLE_NAME.yaml

  if [[ ! -d "${DB_CREDENTIALS_DIRECTORY}" ]]; then
    echo "echo -e \"${RED}ERROR:${NC} No DB credentials directory found for ${YELLOW}${DB_NAME}/${ENVIRONMENT}/${ROLE_NAME}${NC}. [${YELLOW}${DB_CREDENTIALS_DIRECTORY}${NC}]\"" > $VALIDATE_FILE
    echo "exit 1" >> $VALIDATE_FILE
    echo "source $VALIDATE_FILE"
  fi  

  if [[ ! -f "${DB_CREDENTIALS_FILE}" ]]; then
    echo "echo -e \"${RED}ERROR:${NC} No DB credentials yaml file file found for ${YELLOW}${DB_NAME}/${ENVIRONMENT}/${ROLE_NAME}${NC}. [${YELLOW}${DB_CREDENTIALS_FILE}${NC}]\"" > $VALIDATE_FILE
    echo "exit 1" >> $VALIDATE_FILE
    echo "source $VALIDATE_FILE"
  fi

  rm -f $VALIDATE_FILE
}

function db-mysql-role-use-credential-execute {
  DB_NAME=$1
  ENVIRONMENT=$2
  ROLE_NAME=$3

  local BLUEPRINT_DIRECTORY=$(pwd)/db/blueprint
  local BLUEPRINT_DATABASE_FILE=${BLUEPRINT_DIRECTORY}/mysql/${DB_NAME}/${ENVIRONMENT}.yml
  local BLUEPRINT_ROLES_DIRECTORY=${BLUEPRINT_DIRECTORY}/mysql/${DB_NAME}/__roles__/${ENVIRONMENT}/${ROLE_NAME}
  local BLUEPRINT_ROLES_CREATION_FILE=${BLUEPRINT_DIRECTORY}/mysql/${DB_NAME}/__roles__/${ENVIRONMENT}/${ROLE_NAME}/creation.sql

  DB_DEPLOYMENT_TYPE=$($yq r $BLUEPRINT_DATABASE_FILE 'db.deployment')
  export IDENTIFIER=${DB_DEPLOYMENT_TYPE}.mysql.${ORGANIZATION}.${TEAM}.${PRODUCT}.${DB_NAME}.${ENVIRONMENT}
  export DB_DIRECTORY=$CURRENT_DIRECTORY/.run.db/${IDENTIFIER}
  export DB_CREDENTIALS_DIRECTORY=$DB_DIRECTORY/.credentials
  export DB_CREDENTIALS_FILE=$DB_DIRECTORY/.credentials/$ROLE_NAME.yaml

  local USE_CREDENTIAL_FILE=$DB_CREDENTIALS_DIRECTORY/$ROLE_NAME.use-credential
  DBCTL_USERNAME=$($yq r $DB_CREDENTIALS_FILE 'data.username')
  DBCTL_PASSWORD=$($yq r $DB_CREDENTIALS_FILE 'data.password')
  echo "export DBCTL_USERNAME=$DBCTL_USERNAME" > $USE_CREDENTIAL_FILE
  echo "export DBCTL_PASSWORD=$DBCTL_PASSWORD" >> $USE_CREDENTIAL_FILE
  echo "source $USE_CREDENTIAL_FILE"
}

if [ $# == 0 ]; then
    exit 3
fi

if [[ " ${1} " == *"help"* ]] || [[ " ${1} " == *"--help"* ]];then
    exit 3
else
    if [[ -z "$1" ]] || [[ -z "$2" ]] || [[ -z "$3" ]]; then
        exit 3
    else
        db-mysql-role-use-credential-validate $1 $2 $3
        db-mysql-role-use-credential-execute $1 $2 $3
    fi
fi