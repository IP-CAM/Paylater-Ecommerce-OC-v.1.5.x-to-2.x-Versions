#!/bin/bash
set -e

export VAULT_ADDR={{ vault_cluster.protocol }}://{{ machine_ip }}:{{ member.port }}

{% if vault_cluster.cluster.location == 'local' %}
sudo service {{ target }} stop
{% if member.backend == "etcd" %}
export ETCDCTL_API=3
{% if not vault_cluster.tls.enabled %}
etcdctl del --prefix /vault/{{ vault_cluster.cluster.name }} > /dev/null
{% else %}
ETCDCTL_API=3 etcdctl \
    --cacert {{ member.etcd.tls.trusted_ca_file }} \
    --cert {{ member.etcd.tls.cert_file }} \
    --key {{ member.etcd.tls.key_file }} \
    del --prefix /vault/{{ vault_cluster.cluster.name }}
{% endif %}
{% endif %}
sleep 5
sudo service {{ target }} start
sleep 3
{% endif %}

{% if vault_cluster.tls.enabled %}
export VAULT_CACERT={{ member.trusted_ca_file }}
export VAULT_CLIENT_CERT={{ member.cert_file }}
export VAULT_CLIENT_KEY={{ member.key_file }}
{% endif %}

rm -f /home/vault/vault-operator-init.out
vault operator init > /home/vault/vault-operator-init.out
cat /home/vault/vault-operator-init.out | head -n 7 | cut -d':' -f2 | xargs > vault-operator-root.out
VAULT_UNSEAL_KEY_1=$(cat vault-operator-root.out | cut -d ' ' -f1)
VAULT_UNSEAL_KEY_2=$(cat vault-operator-root.out | cut -d ' ' -f2)
VAULT_UNSEAL_KEY_3=$(cat vault-operator-root.out | cut -d ' ' -f3)
VAULT_UNSEAL_KEY_4=$(cat vault-operator-root.out | cut -d ' ' -f4)
VAULT_UNSEAL_KEY_5=$(cat vault-operator-root.out | cut -d ' ' -f5)
VAULT_ROOT_TOKEN=$(cat vault-operator-root.out | cut -d ' ' -f6)

export VAULT_SOURCE_INIT_FILE=/home/vault/vault.init-local
rm -f ${VAULT_SOURCE_INIT_FILE}
echo "export VAULT_UNSEAL_KEY_1=${VAULT_UNSEAL_KEY_1}" > $VAULT_SOURCE_INIT_FILE
echo "export VAULT_UNSEAL_KEY_2=${VAULT_UNSEAL_KEY_2}" >> $VAULT_SOURCE_INIT_FILE
echo "export VAULT_UNSEAL_KEY_3=${VAULT_UNSEAL_KEY_3}" >> $VAULT_SOURCE_INIT_FILE
echo "export VAULT_UNSEAL_KEY_4=${VAULT_UNSEAL_KEY_4}" >> $VAULT_SOURCE_INIT_FILE
echo "export VAULT_UNSEAL_KEY_5=${VAULT_UNSEAL_KEY_5}" >> $VAULT_SOURCE_INIT_FILE
echo "export VAULT_TOKEN=${VAULT_ROOT_TOKEN}" >> $VAULT_SOURCE_INIT_FILE