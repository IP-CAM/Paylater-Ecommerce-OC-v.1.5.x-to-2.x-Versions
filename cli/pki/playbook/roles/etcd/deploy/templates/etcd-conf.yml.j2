# This is the configuration file for the {{ target }} etcd server.

# ===================================================================
# Configuration generated by cluster provisioning 
# ===================================================================
name: '{{ target }}'
data-dir: '{{ etcd_data_directory }}/{{ member.data_dir }}'
wal-dir: '{{ etcd_data_directory }}/{{ member.wal_dir }}'
listen-peer-urls: '{{ etcd_cluster.protocol }}://{{ machine_ip }}:{{ member.peer_urls_port }}'
listen-client-urls: '{{ etcd_cluster.protocol }}://{{ machine_ip }}:{{ member.client_urls_port }}'
initial-advertise-peer-urls: '{{ etcd_cluster.protocol }}://{{ machine_ip }}:{{ member.peer_urls_port }}'
advertise-client-urls: '{{ etcd_cluster.protocol }}://{{ machine_ip }}:{{ member.client_urls_port }}'
initial-cluster: '{% for group in ansible_play_batch -%}
                    {% set cluster_group = group|replace(prefix, '')|replace(etcd_cluster.domain, '') -%}
                    {% set cluster_member = etcd_cluster.members[cluster_group] -%}
                    {% set cluster_machine_ip = hostvars[group].ansible_default_ipv4.address -%}
                    {% if etcd_cluster.environment == 'development' -%}
                    {% set cluster_machine_ip = "127.0.0.1" -%}
                    {% endif -%}
                    {% set initial_cluster_str = '' + cluster_group + '=' + etcd_cluster.protocol + '://' + cluster_machine_ip + ':' + cluster_member.peer_urls_port|string -%}
                    {{ initial_cluster_str -}}
                    {% if not loop.last -%}
                    {{ ',' -}}
                    {% endif -%}
                {% endfor -%}'
initial-cluster-token: 'etcd.cluster.{{ cluster }}.{{ blueprint }}'
initial-cluster-state: 'new'
{% if etcd_cluster.tls.enabled -%}
client-transport-security:
  cert-file: {{ member.client_cert_file }}
  key-file: {{ member.client_key_file }}
  client-cert-auth: true
  trusted-ca-file: {{ member.trusted_ca_file }}
  auto-tls: false

peer-transport-security:
  cert-file: {{ member.peers_cert_file }}
  key-file: {{ member.peers_key_file }}
  client-cert-auth: true
  trusted-ca-file: {{ member.trusted_ca_file }}
  auto-tls: false
{% endif -%}
# ===================================================================


# ===================================================================
# Configuration that is given by default
# ===================================================================

# Number of committed transactions to trigger a snapshot to disk.
snapshot-count: 10000

# Time (in milliseconds) of a heartbeat interval.
heartbeat-interval: 100

# Time (in milliseconds) for an election to timeout.
election-timeout: 1000

# Raise alarms when backend size exceeds the given quota. 0 means use the
# default quota.
quota-backend-bytes: 0

# Maximum number of snapshot files to retain (0 is unlimited).
max-snapshots: 5

# Maximum number of wal files to retain (0 is unlimited).
max-wals: 5

# Comma-separated white list of origins for CORS (cross-origin resource sharing).
cors:

# Discovery URL used to bootstrap the cluster.
discovery:

# Valid values include 'exit', 'proxy'
discovery-fallback: 'proxy'

# HTTP proxy to use for traffic to discovery service.
discovery-proxy:

# DNS domain used to bootstrap initial cluster.
discovery-srv:

# Reject reconfiguration requests that would cause quorum loss.
strict-reconfig-check: false

# Accept etcd V2 client requests
enable-v2: true

# Enable runtime profiling data via HTTP server
enable-pprof: true

# Valid values include 'on', 'readonly', 'off'
proxy: 'off'

# Time (in milliseconds) an endpoint will be held in a failed state.
proxy-failure-wait: 5000

# Time (in milliseconds) of the endpoints refresh interval.
proxy-refresh-interval: 30000

# Time (in milliseconds) for a dial to timeout.
proxy-dial-timeout: 1000

# Time (in milliseconds) for a write to timeout.
proxy-write-timeout: 5000

# Time (in milliseconds) for a read to timeout.
proxy-read-timeout: 0

# Enable debug-level logging for etcd.
debug: false

# Specify a particular log level for each etcd package (eg: 'etcdmain=CRITICAL,etcdserver=DEBUG'.
log-package-levels:

# Force to create a new one member cluster.
force-new-cluster: false

auto-compaction-mode: periodic
auto-compaction-retention: "1"

# ===================================================================