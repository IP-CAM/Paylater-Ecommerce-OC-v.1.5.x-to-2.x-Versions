- name: Set directory
  set_fact:
    source_db_file: "{{ pkictl_directory }}/pki/{{ ca_target }}/.db/ca.db"

# CA.db file sample
# 
# V       240408075924Z           54      unknown /O=Cermati/OU=Engineering/C=ID/CN=someone@cermati.com
# R       240408075930Z   190422022713Z   55      unknown /O=Cermati/OU=Engineering/C=ID/CN=someone@cermati.com
# V       240409034014Z           56      unknown /O=Cermati/OU=Development/C=ID/CN=vault-client-dev
# R       240409043630Z   190423110244Z   57      unknown /O=Cermati/OU=Development/C=ID/CN=sample-service
# R       240409053737Z   190423110244Z   58      unknown /O=Cermati/OU=Development/C=ID/CN=sample-service
# R       240409054002Z   190424023050Z   59      unknown /O=Cermati/OU=Development/C=ID/CN=sample-service
# V       240409060453Z           5A      unknown /O=Cermati/OU=Development/C=ID/CN=sample-service
# V       240409060850Z           5B      unknown /O=Cermati/OU=Development/C=ID/CN=sample-service
# 
# The task below (Filter required certificate data from database)
# Assuming the cert_name = sample-service, it will simplify the above file into:
# 5A,240409060453Z
# 5B,240409060850Z
# 
# The purpose of this filter is to make the pkictl service certs revoke command only download the valid certificates data for a particular service
# rather than downloading the entire database, which of course will grow bigger and may cause the data retrieval slow
- name: Filter required certificate data from database
  shell: |
    cat {{ source_db_file }} | grep {{ cert_name }} | sed -e "s/\s\+/,/g" | awk -F ',' '$1 == "V" {printf "%s,%s\n", $3, $2}'
  register: valid_certs

- block:
    - name: Ensure directory
      file:
        path: "{{ temp_db_dir }}"
        state: directory

    - name: "Write retrieved valid certificate list of {{ cert_name }} to temporary file"
      copy:
        content: "{{ valid_certs.stdout }}"
        dest: "{{ temp_db_file }}"
  delegate_to: localhost