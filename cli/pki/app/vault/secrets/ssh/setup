#!/usr/bin/env bash

function vault-secrets-ssh-setup-validate {
    local clusterInventory=$1
    local blueprint=$2
    local hostGroupTarget=$3
    local inventoryFile=~/.host-inventory/inventory.d/${clusterInventory}
    local secretsBlueprintFile=./pki/blueprint/secrets/ssh/${clusterInventory}/${blueprint}/${hostGroupTarget}/conf.yml
    local roleOptionsDirectory=./pki/files/secrets/ssh/${clusterInventory}/${blueprint}/${hostGroupTarget}/role-options
    local tempDirectory=.tmp.pki

    if [[ ! -d "${tempDirectory}" ]]; then
        mkdir -p .tmp.pki
    fi

    if [[ ! -f "${inventoryFile}" ]]; then
        echo -e "${RED}[ERROR]${NC} ${YELLOW}${clusterInventory}${NC} cluster inventory not found. Expected on: ${RED}[${inventoryFile}]${NC}"
        echo -e "Try to run ${YELLOW}./pkictl inventory setup${NC} to setup inventories needed for pkictl"
        exit 1
    fi
    
    if [[ ! -f "${secretsBlueprintFile}" ]]; then
        echo -e "${RED}[ERROR]${NC} ${YELLOW}${secretsBlueprintFile}${NC} SSH secrets blueprint file not found. Expected on: ${RED}[${secretsBlueprintFile}]${NC}"
        exit 1
    fi

    if [[ ! -d "${roleOptionsDirectory}" ]]; then
        echo -e "${RED}[ERROR]${NC} ${YELLOW}${roleOptionsDirectory}${NC} SSH role options directory not found. Expected on: ${RED}[${roleOptionsDirectory}]${NC}"
        exit 1
    fi
}

function vault-secrets-ssh-setup-execute {
    local clusterInventory=$1
    local blueprint=$2
    local hostGroupTarget=$3
    local inventoryFile=~/.host-inventory/inventory.d/${clusterInventory}
    local currentDirectory=$(pwd)
    local secretsBlueprintFile=${currentDirectory}/pki/blueprint/secrets/ssh/${clusterInventory}/${blueprint}/${hostGroupTarget}/conf.yml
    local roleOptionsDirectory=${currentDirectory}/pki/files/secrets/ssh/${clusterInventory}/${blueprint}/${hostGroupTarget}/role-options
    local tempDirectory=${currentDirectory}/.tmp.pki
    
    if [[ "${clusterInventory}" == "local" ]]; then
        echo -ne "${GREEN}[PKICTL]${NC} "
        $ANSIBLE_PLAYBOOK pki/playbook/pki-vault-ssh-setup.yml \
            -i "${inventoryFile}" \
            -e "cluster=${clusterInventory}" \
            -e "blueprint=${blueprint}" \
            -e "blueprint_file=${secretsBlueprintFile}" \
            -e "role_options_dir=${roleOptionsDirectory}" \
            -e "host_group_target=${hostGroupTarget}" \
            -e "temp_dir=${tempDirectory}" \
            --ask-become-pass
    else
        $ANSIBLE_PLAYBOOK pki/playbook/pki-vault-ssh-setup.yml \
            -i "${inventoryFile}" \
            -e "cluster=${clusterInventory}" \
            -e "blueprint=${blueprint}" \
            -e "blueprint_file=${secretsBlueprintFile}" \
            -e "role_options_dir=${roleOptionsDirectory}" \
            -e "host_group_target=${hostGroupTarget}" \
            -e "temp_dir=${tempDirectory}"
    fi
}

if [ $# == 0 ]; then
    exit 3
fi

if [[ " ${1} " == *"help"* ]] || [[ " ${1} " == *"--help"* ]];then
    exit 3
else
    if [[ -z "$1" ]] || [[ -z "$2" ]] || [[ -z "$3" ]]; then
        exit 3
    else
        vault-secrets-ssh-setup-validate $1 $2 $3
        vault-secrets-ssh-setup-execute $1 $2 $3
    fi
fi