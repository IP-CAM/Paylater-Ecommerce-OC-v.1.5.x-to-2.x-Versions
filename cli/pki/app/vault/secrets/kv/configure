#!/bin/bash
set -e
trap "exit" INT

source ./pki/app/namespace 

YQ_EXEC=./.bin.pki/yq
VAULT_EXEC=./.bin.pki/vault
CURRENT_DIRECTORY=$(pwd)

function vault-secrets-kv-configure-validate {
    if [[ -z "$GITHUB_USERNAME" ]]; then
      echo -e "${RED}[ERROR]${NC} No GITHUB_USERNAME specified. Please export it to your environment variable."
      exit 1
    fi
}

function vault-secrets-kv-configure-execute {
    local APPLICATION_NAME=$1
    local ENVIRONMENT=$2
    
    export IDENTIFIER=${ORGANIZATION}.${TEAM}.${PRODUCT}
    export RUN_DIRECTORY=$CURRENT_DIRECTORY/.run.pki/project.configure.secrets.${IDENTIFIER}
    mkdir -p ${RUN_DIRECTORY}
    
    # Should have AppName & Environment as parameter
    local VAULT_CERTS_BUNDLE="pkictl-${ENVIRONMENT}"
    
    echo -e "${GREEN}[PKICTL]${NC} Importing PKI Certificate for Vault : [[member]]:${YELLOW}$GITHUB_USERNAME${NC}@[[certs_bundle]]:${YELLOW}$VAULT_CERTS_BUNDLE${NC}"
    $(./pkictl member certs use $VAULT_CERTS_BUNDLE)
    local VAULT_CERT_FILE=$PKICTL_MEMBER_CERT_FILE
    local VAULT_KEY_FILE=$PKICTL_MEMBER_KEY_FILE
    local VAULT_CA_CERT_FILE=$PKICTL_MEMBER_CA_CERT_FILE
    
    local VAULT_LOGIN_CONTEXT=${ORGANIZATION}-${TEAM}-${PRODUCT}-${ENVIRONMENT}
    ./pkictl vault context login cert $VAULT_LOGIN_CONTEXT 
    $(./pkictl vault context get)
    
    export VAULT_CACERT=$VAULT_CA_CERT_FILE
    export VAULT_CLIENT_CERT=$VAULT_CERT_FILE
    export VAULT_CLIENT_KEY=$VAULT_KEY_FILE
    export VAULT_TOKEN=$PKICTL_CONTEXT_TOKEN

    # Hard code first
    if [[ "$ENVIRONMENT" == "dev" ]]; then
        export VAULT_ADDR="https://localhost:8200"
    else
        export VAULT_ADDR="https://vault.cermati.com:8443"
    fi

    mkdir -p $RUN_DIRECTORY/.bin.pki
    cp -r ./.bin.pki $RUN_DIRECTORY
    
    pushd $RUN_DIRECTORY
    $VAULT_EXEC secrets list -format=yaml > vault.secrets.list.yaml
    
    # export V10_SECRETS_IDENTIFIER_PATH=v1.0/${ORGANIZATION}/${TEAM}/kv/${PRODUCT}
    # KV_SECRET_ENGINE=$($YQ_EXEC r vault.secrets.list.yaml "[${V10_SECRETS_IDENTIFIER_PATH}/]")
    # if [[ $KV_SECRET_ENGINE == "null" ]]; then
    #    echo -e "${GREEN}[PKICTL]${NC} Enabling secrets - ${V10_SECRETS_IDENTIFIER_PATH}"
    #    $VAULT_EXEC secrets enable -path=${V10_SECRETS_IDENTIFIER_PATH} kv
    # fi
    # echo -e "${GREEN}[PKICTL]${NC} Secrets - ${V10_SECRETS_IDENTIFIER_PATH} has been enabled."
    # $VAULT_EXEC secrets list | grep ${V10_SECRETS_IDENTIFIER_PATH}
    
    export V11_SECRETS_IDENTIFIER_PATH=v1.1/${ORGANIZATION}/${TEAM}/kv/${PRODUCT}
    KV_SECRET_ENGINE=$($YQ_EXEC r vault.secrets.list.yaml "[${V11_SECRETS_IDENTIFIER_PATH}/]")
    if [[ $KV_SECRET_ENGINE == "null" ]]; then
        echo -e "${GREEN}[PKICTL]${NC} Enabling secrets - ${V11_SECRETS_IDENTIFIER_PATH}"
        $VAULT_EXEC secrets enable -path=${V11_SECRETS_IDENTIFIER_PATH} kv
    fi
    echo -e "${GREEN}[PKICTL]${NC} Secrets - ${V11_SECRETS_IDENTIFIER_PATH} has been enabled."
    echo -e "========================================================================"
    $VAULT_EXEC secrets list | grep ${V11_SECRETS_IDENTIFIER_PATH}
    echo -e "========================================================================"
    
    # export V11_ALT_SECRETS_IDENTIFIER_PATH=v1.1.alt/kv/${ORGANIZATION}/${TEAM}/${PRODUCT}
    # KV_SECRET_ENGINE=$($YQ_EXEC r vault.secrets.list.yaml "[${V11_ALT_SECRETS_IDENTIFIER_PATH}/]")
    # if [[ $KV_SECRET_ENGINE == "null" ]]; then
    #     echo -e "${GREEN}[PKICTL]${NC} Enabling secrets - ${V11_ALT_SECRETS_IDENTIFIER_PATH}"
    #     $VAULT_EXEC secrets enable -path=${V11_ALT_SECRETS_IDENTIFIER_PATH} kv
    # fi
    # echo -e "${GREEN}[PKICTL]${NC} Secrets - ${V11_ALT_SECRETS_IDENTIFIER_PATH} has been enabled."
    # $VAULT_EXEC secrets list | grep ${V11_ALT_SECRETS_IDENTIFIER_PATH}
    popd
}


if [ $# == 0 ]; then
    exit 3
fi

if [[ " ${1} " == *"help"* ]] || [[ " ${1} " == *"--help"* ]];then
    exit 3
else
    if [[ -z "$1" ]] || [[ -z "$2" ]]; then
        exit 3
    else
        vault-secrets-kv-configure-validate $1 $2 $3
        vault-secrets-kv-configure-execute $1 $2 $3
    fi
fi