#!/usr/bin/env bash
set -e
trap "exit" INT

YOUR_SUDO_PASS=""

function service-certs-request-validate {
    local CLUSTER_INVENTORY=$1
    local BLUEPRINT=$2
    local INVENTORY_FILE=~/.host-inventory/inventory.d/${CLUSTER_INVENTORY}
    local CURRENT_DIRECTORY=$(pwd)
    local BLUEPRINT_DIRECTORY=$CURRENT_DIRECTORY/pki/blueprint/certs/${CLUSTER_INVENTORY}/${BLUEPRINT}

    if [[ ! -f "${INVENTORY_FILE}" ]]; then
        echo -e "${RED}[ERROR]${NC} ${YELLOW}${CLUSTER_INVENTORY}${NC} cluster inventory not found. Expected on: ${RED}[${INVENTORY_FILE}]${NC}"
        echo -e "Try to run ${YELLOW}./pkictl inventory setup${NC} to setup inventories needed for pkictl"
        exit 1
    fi

    if [[ ! -d "$BLUEPRINT_DIRECTORY" ]]; then
        echo -e "${RED}[ERROR]${NC} Blueprint directory ${YELLOW}${BLUEPRINT_DIRECTORY}${NC} not found."
        exit 1
    fi

    if [[ ! -f "$BLUEPRINT_DIRECTORY/spec.yml" ]]; then
        echo -e "${RED}[ERROR]${NC} Blueprint file ${YELLOW}${BLUEPRINT_DIRECTORY}/spec.yml${NC} not found."
        exit 1
    fi
}

function service-certs-request-execute {
    local CLUSTER_INVENTORY=$1
    local BLUEPRINT=$2
    local INVENTORY_FILE=~/.host-inventory/inventory.d/${CLUSTER_INVENTORY}
    local CURRENT_DIRECTORY=$(pwd)
    local BLUEPRINT_DIRECTORY=${CURRENT_DIRECTORY}/pki/blueprint/certs/${CLUSTER_INVENTORY}/${BLUEPRINT}
    local CSR_DIRECTORY=/usr/share/pki/certs/service/${BLUEPRINT}
    local METHOD="request"

    if [[ "${CLUSTER_INVENTORY}" == "local" ]]; then
        $ANSIBLE_PLAYBOOK pki/playbook/pki-service-certs-request.yml \
            -i "${INVENTORY_FILE}" \
            -e "blueprint=${BLUEPRINT}" \
            -e "blueprint_directory=${BLUEPRINT_DIRECTORY}" \
            -e "cluster=${CLUSTER_INVENTORY}" \
            -e "csr_directory=${CSR_DIRECTORY}" \
            -e "method=${METHOD}" \
            -e "ansible_sudo_pass=${YOUR_SUDO_PASS}"
    else
        $ANSIBLE_PLAYBOOK pki/playbook/pki-service-certs-request.yml \
            -i "${INVENTORY_FILE}" \
            -e "blueprint=${BLUEPRINT}" \
            -e "blueprint_directory=${BLUEPRINT_DIRECTORY}" \
            -e "cluster=${CLUSTER_INVENTORY}" \
            -e "method=${METHOD}" \
            -e "csr_directory=${CSR_DIRECTORY}"
    fi
}

if [ $# == 0 ]; then
    exit 3
fi

if [[ " ${1} " == *"help"* ]] || [[ " ${1} " == *"--help"* ]];then
    exit 3
else
    if [[ -z "$1" ]] || [[ -z "$2" ]]; then
        exit 3
    else
        service-certs-request-validate $1 $2

        if [[ "${1}" == "local" ]]; then
            echo -ne "${GREEN}[PKICTL]${NC} SUDO password: "
            read -s YOUR_SUDO_PASS
            echo -e "\n"
        fi

        service-certs-request-execute $1 $2
    fi
fi