# This file contains simplified Kubernetes service definition. All fields in
# this file are optional, but some are required to make the service functional.
# Some fields conform to one of the official Kubernetes API object and will be
# marked accordingly. Reference to said API objects can be viewed here:
#   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.12/

---
# The `template` section contains simplified Kubernetes deployment definition
template:
  # The `labels` section contains labels that will be attributed to the service.
  # This section conforms to the `labels` object of "ObjectMeta v1 meta" API.
  # labels:
  #   a_custom_service_label: a_custom_service_label_value

  # The `ports` section contains list of pod ports that will exposed by the
  # service. Ports exposed here must be exposed first by the main container,
  # configured in the `mainContainer.ports` section of `deployment.yml`. Each
  # object within this list conforms to the "ServicePort v1 core" API.
  ports:
    - name: http-api
      port: 80
      targetPort: http-api

  # The `type` section dictates the type of the Kubernetes service that will be
  # created from this configuration. This section conforms to the `type` object
  # of the "ServiceSpec v1 core" API.
  # More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: LoadBalancer

  # The `loadBalancerOptions` section contains configuration relevant when using
  # "LoadBalancer" service type.
  loadBalancerOptions:
    # What kind of loadbalancer service to create. "internal" means that the
    # service will only be accessible within the VPC. "external" means that the
    # service will be exposed to the public internet.
    type: internal

# The `raw` section contains custom configurations that can't be configured
# within the `template` section. Fields defined in this section will be merged
# into the deployment specification generated from the `template` section. This
# section conforms to the "Service v1 core" API.
# raw:
#   spec:
#     sessionAffinity: ClientIP
#     sessionAffinityConfig:
#       clientIP:
#         timeoutSeconds: 10800
