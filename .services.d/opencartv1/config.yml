---
# Parent organization of this service, case-sensitive. Currently, the only valid
# value for this field is "cermati"
organization: cermati

# The team this service belongs to, case-sensitive.
# Valid values: "cermati", "indodana"
team: indodana

# Name of the product this service belongs to, case-sensitive. Can be equal to
# the name of the service if it is a standalone service.
# Example: "athena-service" and "athena-worker" both belongs to "athena" product
product: chermes

# List of build and run environments of this service. You can rename the
# environments (e.g. from 'production' to 'prod') by changing the values here
# and renaming the YAML files in the `config/` directory
environments:
  - dev

# (Optional) Information about Public Key Infrastructure utilization of this
#  service
pki:
  # (Optional) Set to true if this service needs PKICTL certificate to exist in
  #  the default directory (/usr/share/pki/certs/service). Default is false.
  enabled: false

  # (Optional) Prefix of the PKICTL blueprint of this service. Only to be used
  #  when the service name defined in this repository differs with the one
  #  defined in PKICTL's blueprints. This value will be used as a prefix in the
  #  actual blueprint name according to this format:
  #
  #    <pkictl_blueprint_prefix>-<environment>
  #
  #  By default the value is "<service_name>"
  # pkictl_blueprint_prefix: athena-service

# (Optional) Repository to push and pull service image from. If not defined,
# will be inferred automatically from `team`
# repository: 1234567890.dkr.ecr.us-west-2.amazonaws.com/non-existing-repository

build_image:
  name: nginx:1.17.0

base_image:
  name: nginx:1.17.0

# (Optional) Configuration about Docker
docker:
  # (Optional) Configuration about Docker build process
  containerize:
    # (Optional) A directory in the project root directory where directories
    #  defined in `build_time_mounts[*].mount_directory` will be temporarily
    #  copied before being mounted into the build container.
    #
    #  This directory **should not** be listed in the `.gitignore` file unless a
    #  `.dockerignore` file exist which **does not list** this directory
    #  (i.e. if this project has a `.dockerignore` file, you can ignore this
    #  directory in the `.gitignore` but not in the `.dockerignore` file).
    #
    #  The default value for this field is `.svctl_docker_mount`
    # temporary_mount_directory: .svctl_docker_mount

    # (Optional) This section defines directories that are present in the host
    #  machine that will be mounted (copied) into the **build container** at
    #  the Docker build process. These files won't be present in the resulting
    #  Docker image unless somehow you managed to mount the files into the
    #  build directory. If that's what you want, you should copy the mounted
    #  files during the `build()` command in the `service` file.
    #
    #  This section is an array. Multiple mount configurations can be defined.
    build_time_mounts:
      # (Required) A directory in the project root directory which files will be
      #  mounted (copied) into the build container. Can be absolute path or
      #  relative path (relative to the project's root directory)
      # - mount_directory: config_dir

      # (Optional) Where should the `docker.containerize.mount_directory` be
      #  mounted/copied into. Must be an absolute path. The default value is
      #  `/`, which means if there is a file in
      #  `/path/to/project/config_dir/dir1/dir2/a_file.txt`, that file will be
      #   present in the build container at `/dir1/dir2/a_file.txt`.
      #   target_directory: /

      # Another example, `/usr/share/pki/certs/member` will be copied as
      #  `/usr/share/pki/certs/member`
      - mount_directory: .npmrc
        target_directory: /home/appRunner/.npmrc

    # (Optional) List of environment variables defined in the host machine that
    #  will be passed into the **build** container
    # inherited_host_env:
    #   - GITHUB_USERNAME
    #   - PKICTL_CONTEXT
    #   - PKICTL_CONTEXT_TLS_CACERT
    #   - PKICTL_CONTEXT_TLS_CERT
    #   - PKICTL_CONTEXT_TLS_KEY
